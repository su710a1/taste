// 讀取 變數 檔案 ; @use 區域性 ; 一次性 ; 規則 檔案要另給名稱 ; 基於檔案的安全性 ; 要放置在所有語法最上層
@use '_01variable/variable' as V;
@use '_02mixin/01media' as R;
@use '_02mixin/02images' as Img;
@use '_02mixin/03Rounded' as Ro;
@use '_02mixin/04Jmixin' as JM;
// 滿版設計 section id="taste" : 設定寬 100 高 100 背景顏色
#taste {
    width: V.$Num_10 * 10 * V.$Per;
    height: V.$Num_10 * 10 * V.$Per;
    // background-color:burlywood;
}
// 子選擇器(指定階層 > : 同層之中不能有相同的標籤,若有相同須設定 id 或 class) ; 子孫選擇器(跨標籤讀取 利用「空格」)
// 巢狀寫法
// menu(背景圖片取代文字呈現) 與 Logo(水平垂直置中) 要同一列 ; 聯絡資訊要個別一列(文字寬度為90% ; 文字靠右對齊,文字顏色 咖啡色) ; 隱藏項目符號

// #{} 格式,會將「變數設定成字串」的內容轉譯為「選擇器」或是「屬性名稱」
@include R.Rwd(xs){
    #Banner {
        @include JM.WH();
        position: absolute;
        z-index: V.$ZNumNeg;
        // 定位點:停佇
        // position: fixed;
        top: 0;
        // background-color: wheat;

        ul {
            @include JM.WH();
            position: relative;

            li {
                @include JM.WH();
                @include JM.BannerRound;
                // 動畫 格式預設值
                opacity: 0;
                filter: alpha(opacit=0);
                -webkit-filter:alpha(opacit=0);
                position: absolute;
                // background-color: rgb(9, 188, 194);
            }
            .Images1 {@include Img.Images(center, cover, photo, "001.jpg");}
            .Images2 {@include Img.Images(center, cover, photo, "002.jpg");}
            .Images3 {@include Img.Images(center, cover, photo, "003.jpg");}
            .Images4 {@include Img.Images(center, cover, photo, "004.jpg");}
            .Images5 {@include Img.Images(center, cover, photo, "005.jpg");}
        }
        @include JM.BannerDelay;
    }
    $HeaderHeight: V.$Num_10 * 5px;
    $FooterHeight: V.$Num_10 * 12px;
    header {
        width: V.$Num_10 * 10%;
        height: $HeaderHeight;
        // 顯示方法 : 彈性佈局(智能對齊) ; 在需要排版物件的父框架設定 ; 會將所有的子物件排成一列
        display: flex;
        // 換行,將子物件設定為 兩列 ; 預設值會自動判斷 子物件 的寬度(均分) ; 要設定 子物件 的寬度才會有作用
        flex-wrap: wrap;
        list-style-type: none;
        // 定位點:停佇
        position: fixed;
        top: 0;

        // position: absolute;
        // z-index: V.$ZNum_5;

        #menu {
            width: V.$Num_10 * 1.5%;
            // 文字顏色
            color: rebeccapurple;
            // // 背景圖片取代文字顯示
            // // 1.設定背景圖片連結 2.背景圖片不重複 3.背景圖片的對齊(定位點XY-水平垂直置中)
            // // 4.位移文字(首行縮排-班行文字的第一行) 5. 圖片尺寸設定(預設值:自動)
            // background-image: url(../../images/icons/list.svg);
            // background-repeat: no-repeat;
            // background-position: center;
            // // auto(預設值:自動) cover(滿版覆蓋框架尺寸) contain(滿版留白) | 個別設XY的值(例如:background-size: 50% 30%;)
            // background-size: contain;
            // text-indent: -9999px;
            @include Img.Images(center, contain, icons, "list.svg");//@mixin Images($Pos, $Size, $Folder, $Img)
    
            background-color: blue;
            // #{} 格式,會將「變數設定成字串」的內容轉譯為「選擇器」或是「屬性名稱」
        }
        h1 {
            width: V.$Num_10 * 8.5%;
            height: 50px;
            text-align: center;
            //行高(行距):h1(2em 32px) h2(1.5em 24px) h3(1em 16px)
            //line-height: 52px;
            background-color: red;
            li{
                //height: 32px;
                //上間距 margin-top
                margin-top: calc(( 50px - 32px ) / 2 );
            }
        }
        .ConnBox {
            display: none;
        }
        nav{
            @include JM.WH();
            //重(層)疊順序 設定值 auto(自動) | 整數(數字越大,重(層)疊順序越上層)
            z-index: V.$ZNum_99;
            // 須配合定位點:絕對值
            position: absolute;
            background-color: white;
            display: none; // 隱藏開關
    
            $MenuHeaderH:V.$Num_10 * 15;
            //父框架設置定位點relative,子物件設置定位點absolute,系統會將「body」的原點位置,重新定給「父框架」使用
            #menuheader{
                width: V.$Num_10 * 10%;
                height: calc( $MenuHeaderH * 1px);
                // position: relative;// 重新定位
                // 彈性佈局
                display: flex;
                // 定位點:停佇
                position: fixed;
                // 水平置中
                justify-content: center;
                // 垂直置中
                align-items: center;
                background-color: V.$Blue-Green;
        
                #close{
                    //顯示方式:inline-block(行內區塊層級):以內容的寬度為主
                    display: inline-block;
                    // 文字尺寸替代高度
                    font-size: 1.5rem;
                    // 內間距(留白)
                    padding: 2px;
                    // 文字變化 uppercase(全部大寫) lowercase(全部小寫) capitalize(單字的第一個字母大寫)
                    text-transform: uppercase;
    
                    // small-caps 小型大寫字,會比原本的大寫還要再小再扁一些
                    // font-variant: small-caps;
    
                    //定位點
                    position: absolute;
                    right: 0;
                    top: 0;
                    
                    // 若float:right與display:inline-block一起用,系統將視為display:block
                    // float: right;
    
                    a {
                        // 因為之後是用JavaScript控制所以不用設定感應區
                        // width: 100%;
                        // height: 100%;
                        color: white;
                        //取消文字裝飾(底線)
                        text-decoration: none;
                        // display: block; // display: inline-block;
                    }
                }
                > h1 {
                    //width: V.$Num_10 * 5%;
                    font-size: 2rem;
    
                    // 邊界(外間距)
                    //margin-top: 5%; //會造成整個框架下移,所以不要
    
                    //定位點
                    // position: absolute;
                    // top: 50%;
                    // left: 50%;
                    // margin-left: -40%;
                    // margin-top: -10%;
    
                    //background-color: antiquewhite;
                }
            }
            #menunav{
                width: V.$Num_10 * 8%;
                // height: V.$Num_10 * 6.7%;
                //上邊界
                margin-top: calc(($MenuHeaderH + 10) * 1px);
                .NH {
                    height: 75px;
                }
                h2 {
                    padding: 2.5px 0;
                    border-bottom: {
                        color: V.$Blue-Green;
                        width: 4px;
                        style:double;
                    };
                }
                .Conn {
                    margin-top: 20px;
                }
            }
            $MenuIconWidth: V.$Num_10 * 8.5%;
            #menuicon{
                width: $MenuIconWidth;
                height: V.$Num_10 * 6px;
                //background-color: rgb(154, 154, 243);
                
                //框線
                border-top: {
                    color: V.$Blue-Green;
                    width: 2px;
                    // solid 實線 ; double 雙線 ; dashed 虛線 ; dotted 圓點虛線 
                    // inset 內陰影 ; outset 外陰影 ; groove 浮凸 ; ridge 內凹 
                    style: solid;//border-top-style: ;
                };
                display: flex;
                justify-content: center;
                align-items: center;
                // 定位點:絕對值
                position: absolute;
                z-index: V.$ZNum_10;
                // 定位點:停佇
                position: fixed;
                bottom: 0;
                margin-left: calc((100% - $MenuIconWidth) / 2);
                background-color: white;
            }
        }
    }
    
    //選單共用區
    .Items {
        display: flex;
        flex-wrap: wrap;
        li {
            width: V.$Num_10 * 10%;
            // 首行縮排
            text-indent: 8%;
            font-size: 1rem * 1.2;
        }
        .One {order: 4;}
        .Two {order: 5;}
        .Three {order: 2;}
        .Four {order: 1;}
        .Five {order: 6;}
        .Six {order: 3;}
    }
    #main {
        width: V.$Num_10 * 8.5%;
        // header的高 - nav>li 的 margin-top
        // margin-top: $HeaderHeight - 15px;
        margin-top: $HeaderHeight + 15px;
        
        nav{//background-color: rgb(111, 111, 230);
            li {
                width: V.$Num_10 * 10%;
                height: 150px;
                margin: 15px 0;
                background-color: rgb(146, 61, 61);
                //圓角矩形border-radius: ;
                @include Ro.Rounded(15px);
                text-indent: 0;
                
                //文字水平垂直置中
                display: flex;
                justify-content: center;
                align-items: center;
            }
        }
        .Null {
            height: 135px;
        }
    }
    #Banner {
        @include JM.WH();
        position: absolute;
        z-index: V.$ZNumNeg;
        // 定位點:停佇
        position: fixed;
        top: 0;
        background-color: rgb(255, 208, 0);
    }
    footer{
        width: V.$Num_10 * 10%;
        height: $FooterHeight;
        // 定位點:停佇
        position: fixed;
        bottom: 0;
        font-size: 0.9rem;
        background-color: V.$Blue-Green;
    }
}

@include R.Rwd(sm) {
    header {
        #menu {
            width: V.$Num_10 * 1.3%;
            background-color: orangered;
        }
        h1 {
            width: V.$Num_10 * 8.7%;
            background-color: royalblue;
        }
        ul {
            width: V.$Num_10 * 10%;
        }
    }
}

@include R.Rwd(md) {
    header {
        #menu {
            width: V.$Num_10 * 1.3%;
            background-color: purple;
        }
        h1 {
            width: V.$Num_10 * 8.7%;
            background-color: greenyellow;
        }
        ul {
            width: V.$Num_10 * 10%;
        }
    }
}

@include R.Rwd(lg){
    @include R.FlexBox();
    // @include R.FloatBox();
    header {
        .ConnBox {
            width: V.$Num_10 * 10%;
            position: absolute;
            bottom: 0;
            display: block;
            background-color: aquamarine;
        }
    }
    main {
        display: none;
    }
    footer{
        .ConnBox {
            display: none;
        }
    }
}

// @include R.Rwd(xl){
//     @include R.FloatBox();
// }